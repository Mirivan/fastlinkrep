# requires: upsidedown
import logging
import upsidedown
from .. import loader, utils

logger = logging.getLogger(__name__)

@loader.tds
class ReverseMod(loader.Module):
    """Reverse"""
    strings = {"name": "Message reverser"}
    @loader.unrestricted
    async def reversecmd(self, message):
        if message.is_reply:
            txt = await message.get_reply_message()
            txt = txt.raw_text
            txt = txt[::-1]
            if len(txt) > 4096:
                await message.edit('üê∫ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (`4096`).')
            else:
                await message.edit(txt)
        else:
            await message.edit('üê∫ –ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–º–∞–Ω–¥–æ–π `.reverse` –¥–ª—è –µ–≥–æ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞.')
    @loader.unrestricted
    async def upsidecmd(self, message):
        if message.is_reply:
            txt = await message.get_reply_message()
            txt = txt.raw_text
            txt = upsidedown.transform(txt)
            if len(txt) > 4096:
                await message.edit('üê∫ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (`4096`).')
            else:
                await message.edit(txt)
        else:
            await message.edit('üê∫ –ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–æ–º–∞–Ω–¥–æ–π `.upside` –¥–ª—è –µ–≥–æ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞.')
    @loader.unrestricted
    async def —Ö–ª–æ–øcmd(self, message):
        if message.is_reply:
            txt = await message.get_reply_message()
            txt = txt.raw_text
            txt = txt.replace(' ', ' üëè ')
            if len(txt) > 4096:
                await message.edit('üê∫ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (`4096`).')
            else:
                await message.edit(txt)
        else:
            await message.edit('üê∫ –ì–¥–µ —Ö–ª–æ–ø–∞—Ç—å?')